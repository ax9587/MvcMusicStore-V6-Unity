//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcMusicStore_V5.Tests.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MusicData {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MusicData() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MvcMusicStore_V5.Tests.Resources.MusicData", typeof(MusicData).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ArrayOfGenre&gt;
        ///  &lt;Genre&gt;
        ///    &lt;GenreId&gt;1&lt;/GenreId&gt;
        ///    &lt;Name&gt;Rock&lt;/Name&gt;
        ///  &lt;/Genre&gt;
        ///  &lt;Genre&gt;
        ///    &lt;GenreId&gt;2&lt;/GenreId&gt;
        ///    &lt;Name&gt;Classical&lt;/Name&gt;
        ///  &lt;/Genre&gt;
        ///  &lt;Genre&gt;
        ///    &lt;GenreId&gt;3&lt;/GenreId&gt;
        ///    &lt;Name&gt;Jazz&lt;/Name&gt;
        ///  &lt;/Genre&gt;
        ///  &lt;Genre&gt;
        ///    &lt;GenreId&gt;4&lt;/GenreId&gt;
        ///    &lt;Name&gt;Pop&lt;/Name&gt;
        ///  &lt;/Genre&gt;
        ///  &lt;Genre&gt;
        ///    &lt;GenreId&gt;5&lt;/GenreId&gt;
        ///    &lt;Name&gt;Disco&lt;/Name&gt;
        ///  &lt;/Genre&gt;
        ///  &lt;Genre&gt;
        ///    &lt;GenreId&gt;6&lt;/GenreId&gt;
        ///    &lt;Name&gt;Latin&lt;/Name&gt;
        ///  &lt;/Genre&gt;
        ///  &lt;Genre&gt;
        ///    &lt;GenreId&gt;7&lt;/GenreId&gt;
        ///    &lt;Name&gt;Metal&lt;/Name [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GenreSampleData {
            get {
                return ResourceManager.GetString("GenreSampleData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   &lt;ArrayOfAlbum&gt;&lt;Album&gt;
        ///    &lt;AlbumId&gt;1&lt;/AlbumId&gt;
        ///    &lt;GenreId&gt;1&lt;/GenreId&gt;
        ///    &lt;ArtistId&gt;1&lt;/ArtistId&gt;
        ///    &lt;Title&gt;The Best Of Men At Work&lt;/Title&gt;
        ///    &lt;Price&gt;8.99&lt;/Price&gt;
        ///    &lt;AlbumArtUrl&gt;/Content/Images/placeholder.gif&lt;/AlbumArtUrl&gt;
        ///    &lt;Genre&gt;
        ///      &lt;GenreId&gt;1&lt;/GenreId&gt;
        ///      &lt;Name&gt;Rock&lt;/Name&gt;
        ///    &lt;/Genre&gt;
        ///    &lt;Artist&gt;
        ///      &lt;ArtistId&gt;1&lt;/ArtistId&gt;
        ///      &lt;Name&gt;Men At Work&lt;/Name&gt;
        ///    &lt;/Artist&gt;
        ///  &lt;/Album&gt;  &lt;/ArrayOfAlbum&gt;
        /// .
        /// </summary>
        internal static string MusicSampleData {
            get {
                return ResourceManager.GetString("MusicSampleData", resourceCulture);
            }
        }
    }
}
